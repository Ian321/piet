{"name":"Piet","body":"Piet\r\n====\r\n\r\n[Piet](http://en.wikipedia.org/wiki/Piet_(programming_language%29) is a graphical programming language designed by [David Morgan-Mar](http://en.wikipedia.org/wiki/David_Morgan-Mar). Read more about Piet at http://www.dangermouse.net/esoteric/piet.html.\r\n\r\nThis project provides Piet interpreter lib which is additionally used inside a console and gui aplications. \r\n\r\nCompilation\r\n===========\r\n\r\nThe project uses [CMake](http://www.cmake.org/) for deployment process. You need to have at 2.8.2 version installed. Once cmake is installed, you may compile with following commands:\r\n\r\n    mkdir build\r\n    cd build\r\n    cmake ..\r\n    make\r\n\r\nand it will create all binary files (libs, console and gui application).\r\n\r\nDoxygen\r\n=======\r\n\r\nIf you have doxygen documentation tool installed, cmake will additionally generate HTML documentation.\r\n\r\nQt Creator\r\n==========\r\n\r\nYou may use the Qt Creator tool within the gui project (sources are located in src/gui). Open the project with the `gui.pro` file. But before you can compile the gui application in the Qt Creator, libpietcore.a library has to be compiled (which is done by cmake). Basically, compile entire project with cmake and after this you can use Qt Creator with no limits.\r\n\r\nRun\r\n===\r\n\r\nExecute the `piet` binary file in command line with one parameter, specifying the program to execute:\r\n\r\n    $ piet path_to_img_programs/2toN.png\r\n","google":"","tagline":"Piet graphical programming language interpreter","note":"Don't delete this file! It's used internally to help with page regeneration."}